#Compilar Servlet RUBiS com ultimo build do steeldb: ~/Desktop/git/RUBiS/Servlets
cp -v ../../steeldb/bin/SteelDB.jar ../Servlet_HTML/WEB-INF/lib/ ;  ant clean ; ant dist

#matar tudo o que e java
sudo killall java

#Lançar cache: ~/Desktop/git/RUBiS/db-derby-10.12.1.1-bin/lib
export DERBY_INSTALL=~/Desktop/git/RUBiS/db-derby-10.12.1.1-bin/
java -jar derbyrun.jar server start

#Lançar tomcat: ~/apache-tomcat-8.0.15/bin
./startup.sh
# fazer deploy do .war em ~/Desktop/git/RUBiS/Servlets/

#Compilar client de benchmark rubis: ~/Desktop/git/RUBiS/
make client

#Lançar benchmark rubis: ~/Desktop/git/RUBiS/
make emulator

#Criar BD (1): ~/Desktop/git/RUBiS/
sudo -u postgres /usr/lib/postgresql/9.4/bin/createdb rubis
sudo -u postgres /usr/lib/postgresql/9.4/bin/psql rubis < ~/Desktop/git/RUBiS/database/backup_users_only.sql
make initDB PARAM="items bids comments"

#Criar BD (2): ~/Desktop/git/RUBiS/
sudo -u postgres /usr/lib/postgresql/9.4/bin/createdb rubis
sudo -u postgres /usr/lib/postgresql/9.4/bin/psql rubis < ~/Desktop/git/RUBiS/database/rubis.postgres.sql 
sudo -u postgres /usr/lib/postgresql/9.4/bin/psql rubis < ~/Desktop/git/RUBiS/database/categories.sql 
sudo -u postgres /usr/lib/postgresql/9.4/bin/psql rubis < ~/Desktop/git/RUBiS/database/regions.sql 
make initDB PARAM="all"

#Criar BD (3): ~/Desktop/git/RUBiS/
sudo -u postgres /usr/lib/postgresql/9.4/bin/psql rubis < ~/Desktop/git/RUBiS/database/backup_all.sql

#Criar BD replicada (localmente): ~/Desktop/git/RUBiS/
Primeiro, criar BD normal (ver acima)
sudo -u postgres /usr/lib/postgresql/9.4/bin/psql rubis
	CREATE DATABASE rubis0 WITH TEMPLATE rubis OWNER benchmarksql;
	CREATE DATABASE rubis1 WITH TEMPLATE rubis OWNER benchmarksql;
	CREATE DATABASE rubis2 WITH TEMPLATE rubis OWNER benchmarksql;
	CREATE DATABASE rubis3 WITH TEMPLATE rubis OWNER benchmarksql;

#Criar backup: ~/Desktop/git/RUBiS/

sudo -u postgres /usr/lib/postgresql/9.4/bin/pg_dump rubis > database/backup_all

#Link util: https://underyx.me/2015/05/18/raising-the-maximum-number-of-file-descriptors
